// deno_bot.ts
import { Bot, InlineKeyboard } from "https://deno.land/x/grammy/mod.ts";
import "https://deno.land/std@0.224.0/dotenv/load.ts";

const BOT_TOKEN = Deno.env.get("BOT_TOKEN");
const ADMIN_CHAT_ID = 318752994;
const CHANNEL_LINK = "https://t.me/+SEUjra4YvL41Mjgy";
const WAYFORPAY_URL = "https://secure.wayforpay.com/sub/dinkafood";

const bot = new Bot(BOT_TOKEN)!;

const userLanguage = new Map<number, string>();
const waitingForEmail = new Set<number>();

bot.command("start", async (ctx) => {
  const keyboard = new InlineKeyboard()
    .text("–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ üá∫üá¶", "lang_ua")
    .text("English üá¨üáß", "lang_en");

  await ctx.reply("Hi, cutie! Thank you for being so supportive! ü´Ç Please choose your language üëáüèª", {
    reply_markup: keyboard,
  });
});

bot.callbackQuery(/^lang_/, async (ctx) => {
  const chatId = ctx.chat.id;
  const lang = ctx.match[0].split("_")[1];
  userLanguage.set(chatId, lang);

  const keyboard = new InlineKeyboard().url("üìÑ ", WAYFORPAY_URL);
  const confirm = new InlineKeyboard().text("‚úÖ I‚Äôve paid / –Ø –æ–ø–ª–∞—Ç–∏–≤(–ª–∞)", "confirm_payment");

  if (lang === "ua") {
    await ctx.reply("–°–º–∞–∫–æ–ª–∏–∫—É, –≤—ñ—Ç–∞—é! üçì\n–¢–∏ –Ω–∞ –ø–æ—Ä–æ–∑—ñ –≤—Å—Ç—É–ø—É –¥–æ –∑–∞–∫—Ä–∏—Ç–æ–≥–æ –∫–∞–Ω–∞–ª—É...\n\n–î–æ—Å—Ç—É–ø –∫–æ—à—Ç—É—î 300 –≥—Ä–Ω/–º—ñ—Å.\n–©–æ–º—ñ—Å—è—Ü—è 20% –∑ –ø—ñ–¥–ø–∏—Å–æ–∫ —è –Ω–∞–¥—Å–∏–ª–∞—é –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ –∑–±–æ—Ä–∏ —ñ –¥—ñ–ª—é—Å—å –∑–≤—ñ—Ç–∞–º–∏ —É –∫–∞–Ω–∞–ª—ñ.", {
      reply_markup: keyboard,
    });
    await ctx.reply("–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ —Ç–∏—Ü–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:", {
      reply_markup: confirm,
    });
  } else {
    await ctx.reply("Hey you tasty babe! üçì\nYou're about to enter a private space...\n\nSubscription is 300 UAH/month.\nEvery month, 20% is donated to verified causes.", {
      reply_markup: keyboard,
    });
    await ctx.reply("After payment, click the button below:", {
      reply_markup: confirm,
    });
  }
  await ctx.answerCallbackQuery();
});

bot.callbackQuery("confirm_payment", async (ctx) => {
  const lang = userLanguage.get(ctx.chat.id) || "ua";
  waitingForEmail.add(ctx.chat.id);
  if (lang === "ua") {
    await ctx.reply("–í–∫–∞–∂–∏, –±—É–¥—å –ª–∞—Å–∫–∞, email, –∑ —è–∫–æ–≥–æ —Ç–∏ –∑–¥—ñ–π—Å–Ω—é–≤–∞–≤(–ª–∞) –æ–ø–ª–∞—Ç—É:");
  } else {
    await ctx.reply("Please enter the email address you used for the payment:");
  }
  await ctx.answerCallbackQuery();
});

bot.on("message:text", async (ctx) => {
  const chatId = ctx.chat.id;
  if (!waitingForEmail.has(chatId)) return;
  waitingForEmail.delete(chatId);

  const lang = userLanguage.get(chatId) || "ua";
  const email = ctx.message.text;
  const username = ctx.from?.username || "No username";

  const adminText = lang === "ua"
    ? `üîî –î—è–∫—É—é, —Ç–µ–±–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ!\n\nEmail: ${email}\nUsername: @${username}`
    : `üîî Thank you, you‚Äôre registered!\n\nEmail: ${email}\nUsername: @${username}`;

  await bot.api.sendMessage(ADMIN_CHAT_ID, adminText);

  const userText = lang === "ua"
    ? `–í—ñ—Ç–∞—é –≤ –∑–∞–∫—Ä–∏—Ç–æ–º—É –∫–ª—É–±—ñ! üéâ\n–û—Å—å –ª—ñ–Ω–∫ –Ω–∞ –∫–∞–Ω–∞–ª, bon appetit ü´¶: ${CHANNEL_LINK}`
    : `Welcome to the private club! üéâ\nHere is the channel link, bon appetit ü´¶: ${CHANNEL_LINK}`;

  await ctx.reply(userText);
  await ctx.replyWithAnimation("https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExc293cnNpMGJja290MG81NHRneWdiZjByYXc5YXMzeWJybzF0eTdkdSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/9dTzXZY6qncBO/giphy.gif");
});

bot.command("language", async (ctx) => {
  const keyboard = new InlineKeyboard()
    .text("–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ üá∫üá¶", "lang_ua")
    .text("English üá¨üáß", "lang_en");
  await ctx.reply("Choose your language / –û–±–µ—Ä–∏ –º–æ–≤—É:", {
    reply_markup: keyboard,
  });
});

bot.command("plans", async (ctx) => {
  const lang = userLanguage.get(ctx.chat.id) || "ua";
  const keyboard = new InlineKeyboard().url("üìÑ", WAYFORPAY_URL);
  const text = lang === "ua"
    ? "–î–æ—Å—Ç—É–ø –∫–æ—à—Ç—É—î 300 –≥—Ä–Ω/–º—ñ—Å.\n–©–æ–º—ñ—Å—è—Ü—è 20% –∑ –ø—ñ–¥–ø–∏—Å–æ–∫ —è –Ω–∞–¥—Å–∏–ª–∞—é –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ –∑–±–æ—Ä–∏."
    : "Subscription is 300 UAH/month.\nEvery month, 20% is donated to verified causes.";
  await ctx.reply(text, {
    reply_markup: keyboard,
  });
});

bot.command("cancel", async (ctx) => {
  const lang = userLanguage.get(ctx.chat.id) || "ua";
  const text = lang === "ua"
    ? "–©–æ–± —Å–∫–∞—Å—É–≤–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É, –≤—ñ–¥–∫—Ä–∏–π –ø–æ—à—Ç—É, –∑–Ω–∞–π–¥–∏ –ª–∏—Å—Ç –≤—ñ–¥ WayforPay —Ç–∞ –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É *¬´–°–∫–∞—Å—É–≤–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É¬ª* –∞–±–æ –Ω–∞–ø–∏—à–∏ –º–µ–Ω—ñ üíå"
    : "To cancel your subscription, find the WayforPay confirmation email and click *'Cancel subscription'* or contact me üíå";
  await ctx.reply(text, { parse_mode: "Markdown" });
});

bot.command("ping", async (ctx) => {
  await ctx.reply("pong üèì");
  console.log("üí¨ Ping received and replied");
});

bot.start();
